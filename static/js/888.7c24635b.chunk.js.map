{"version":3,"file":"static/js/888.7c24635b.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Filter.jsx","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","components/ContactList.jsx","pages/ContactForm.jsx","../node_modules/@mui/icons-material/DeleteForeverOutlined.js"],"sourcesContent":["// селектор отримує поточний стан і повертає його необхідну частину\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const { filter } = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(addFilter(e.currentTarget.value));\n  };\n\n  return (\n    <TextField\n      autoComplete=\"off\"\n      sx={{ mt: '10px' }}\n      size=\"small\"\n      fullWidth\n      placeholder=\"Find contact by name\"\n      type=\"search\"\n      value={filter}\n      onChange={changeFilter}\n    ></TextField>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { deleteContact } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nimport { Grid, IconButton, Paper, Tooltip, Typography } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const { filter } = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    const search = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return search;\n  };\n\n  const renderContacts = contacts => {\n    return contacts.map(({ name, id, number }) => (\n      <Grid item xs={12} md={6} key={id}>\n        <Paper\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            pl: '5px',\n          }}\n          elevation={8}\n        >\n          <Typography sx={{ flexGrow: 1 }} variant=\"h6\" component=\"span\">\n            {name}: {number}\n          </Typography>\n\n          <Tooltip title=\"Delete\" placement=\"bottom\">\n            <IconButton\n              sx={{ alignItems: 'flex-end' }}\n              onClick={() => onDeleteContact(id)}\n            >\n              <DeleteForeverOutlinedIcon />\n            </IconButton>\n          </Tooltip>\n        </Paper>\n      </Grid>\n    ));\n  };\n\n  const visibleContacts = getVisibleContact();\n\n  return (\n    <Box sx={{ mt: '10px' }}>\n      <Grid spacing={1} container>\n        {renderContacts(visibleContacts)}\n      </Grid>\n    </Box>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  renderContacts: PropTypes.func,\n  visibleContacts: PropTypes.array,\n};\n","import Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selectors';\n\nimport Fab from '@mui/material/Fab';\n\nimport { TextField } from '@mui/material';\nimport Box from '@mui/material/Box';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const contact = {\n      name,\n      number,\n    };\n    const filteredContacts = contacts.filter(\n      searchContact => searchContact.name.toLowerCase() === normalizedName\n    );\n\n    if (filteredContacts.length > 0) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n\n  const handelChange = e => {\n    // console.log(e.currentTarget.name, e.currentTarget.value);\n\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n    formSubmitHandler(name, number);\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box sx={{ display: 'flex', mt: '20px' }}>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': {\n            m: 1,\n            width: '30vw',\n            display: 'flex',\n            flexDirection: 'column',\n          },\n        }}\n        autoComplete=\"off\"\n        onSubmit={handelSubmit}\n      >\n        <TextField\n          id=\"standard-required\"\n          label=\"Name\"\n          size=\"small\"\n          variant=\"standard\"\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handelChange}\n        ></TextField>\n        <TextField\n          id=\"standard-required\"\n          label=\"Number\"\n          size=\"small\"\n          variant=\"standard\"\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handelChange}\n        ></TextField>\n\n        <Fab\n          color=\"primary\"\n          variant=\"extended\"\n          size=\"small\"\n          type=\"submit\"\n          aria-label=\"add\"\n        >\n          Add Contact\n        </Fab>\n      </Box>\n      <Box sx={{ flexGrow: 1, ml: '20px' }}>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ContactList />\n      </Box>\n    </Box>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.12 10.47 12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\"\n}), 'DeleteForeverOutlined');\nexports.default = _default;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","useSelector","dispatch","useDispatch","TextField","autoComplete","sx","mt","size","fullWidth","placeholder","type","value","onChange","e","addFilter","currentTarget","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","map","spacing","direction","wrap","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","key","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","push","resolveSpacingStyles","breakpointsStyles","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","theme","directionValues","resolveBreakpointValues","handleBreakpoints","propValue","output","flexDirection","gridClasses","maxWidth","rowSpacing","zeroValueBreakpointKeys","rowSpacingValues","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","undefined","Math","round","more","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","component","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","GridContext","breakpointsValues","otherFiltered","_jsx","children","clsx","as","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","contact","getVisibleContact","Box","id","number","xs","md","Paper","alignItems","pl","elevation","Typography","variant","Tooltip","title","placement","IconButton","onClick","deleteContact","onDeleteContact","DeleteForeverOutlined","renderContacts","useState","setName","setNumber","handelChange","reset","m","onSubmit","event","preventDefault","normalizedName","searchContact","length","alert","addContact","formSubmitHandler","label","pattern","required","Fab","color","ml","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}