{"version":3,"file":"static/js/473.9dadad35.chunk.js","mappings":"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","sources":["components/Title/Title.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","redux/selectors.js","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["const Title = ({ children }) => {\n  return <h1>{children}</h1>;\n};\n\nexport default Title;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"input\":\"Filter_input__N7T3z\"};","// селектор отримує поточний стан і повертає його необхідну частину\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import React from 'react';\nimport css from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const { filter } = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(addFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label>\n        Find contact by name:\n        <input\n          className={css.input}\n          type=\"text\"\n          value={filter}\n          onChange={changeFilter}\n        ></input>\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\",\"deleteBtn\":\"ContactList_deleteBtn__1dg25\",\"contact\":\"ContactList_contact__0STHS\"};","import React from 'react';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { deleteContact } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const { filter } = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    const search = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return search;\n  };\n\n  const renderContacts = contacts => {\n    return contacts.map(({ name, id, number }) => (\n      <li className={css.contact} key={id}>\n        {name}: {number}\n        <button className={css.deleteBtn} onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    ));\n  };\n\n  const visibleContacts = getVisibleContact();\n\n  return (\n    <ul className={css.contactsList}>{renderContacts(visibleContacts)}</ul>\n  );\n};\nexport default ContactList;\n\nContactList.propTypes = {\n  renderContacts: PropTypes.func,\n  visibleContacts: PropTypes.array,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Contacts_form__gDTdO\",\"lable\":\"Contacts_lable__3+hS5\",\"input\":\"Contacts_input__OE94n\",\"button\":\"Contacts_button__VDXgV\"};","import Title from '../../components/Title/Title';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList';\n\nimport css from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/selectors';\n\nfunction Contacts() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  const formSubmitHandler = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const contact = {\n      name,\n      number,\n    };\n    const filteredContacts = contacts.filter(\n      searchContact => searchContact.name.toLowerCase() === normalizedName\n    );\n\n    if (filteredContacts.length > 0) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(contact));\n    }\n  };\n\n  const handelChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handelSubmit = event => {\n    event.preventDefault();\n    formSubmitHandler(name, number);\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <form className={css.form} onSubmit={handelSubmit}>\n        <label className={css.lable} htmlFor=\"\">\n          Name\n        </label>\n        <input\n          value={name}\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handelChange}\n        />\n        <label className={css.lable} htmlFor=\"\">\n          Number\n        </label>\n        <input\n          value={number}\n          className={css.input}\n          type=\"text\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handelChange}\n        />\n        <button className={css.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n\n      <Filter />\n\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </>\n  );\n}\n\nexport default Contacts;\n\nContacts.propTypes = {\n  onSubmit: PropTypes.func,\n};\n"],"names":["children","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","useSelector","dispatch","useDispatch","className","css","type","value","onChange","e","addFilter","currentTarget","useEffect","fetchContacts","visibleContacts","normalizedFilter","toLowerCase","contact","name","includes","getVisibleContact","map","id","number","onClick","deleteContact","onDeleteContact","renderContacts","useState","setName","setNumber","handelChange","reset","onSubmit","event","preventDefault","normalizedName","searchContact","length","alert","addContact","formSubmitHandler","htmlFor","pattern","title","required"],"sourceRoot":""}